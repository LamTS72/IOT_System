#include "uart.h"

uint8_t buffer_byte;
uint8_t buffer[MAX_BUFFER_SIZE];
uint8_t index_buffer = 0;
uint8_t buffer_flag = 0;
uint8_t idx_buffer = 0;

int mode = INIT;
uint8_t cmd_data[MAX_CMD_SIZE];
uint8_t cmd_data_index = 0;
uint8_t request_flag = 0;
uint8_t request_check = 0;

void rst_buffer(){
	for(int i=0; i<MAX_BUFFER_SIZE; i++){
		buffer[i] = ' ';
	}
	idx_buffer = 0;
	index_buffer =0;
	cmd_data_index = 0;
}

int isDig(uint8_t ch){
	if(ch >= '0' && ch <= '9') return 1;
	else return 0;
}

int isNum(uint8_t str[], int idx){
	if(isDig(str[idx]) && isDig(str[idx+1]) && isDig(str[idx+2]) && isDig(str[idx+3])) return 1;
	else if(isDig(str[idx+1]) && isDig(str[idx+2]) && isDig(str[idx+3])) return 2;
	else if(isDig(str[idx+2]) && isDig(str[idx+3])) return 3;
	else if(isDig(str[idx+3])) return 4;
	else return 0;

}


void cmd_parser_fsm(){
	char str[50];
	if(buffer_flag == 1){
		if(buffer[idx_buffer] == '!'){
			idx_buffer++;
		}

//			index_buffer = (index_buffer == 0)? 26 : index_buffer-4;
//			if(buffer[index_buffer] == '!' && buffer[index_buffer+1] == '2' && buffer[index_buffer+2] == 'C'){
//				cmd_flag = 1;
//				request_check = 0;
//			}
//			else if (buffer[index_buffer] == '!' && buffer[index_buffer+1] == '2' &&  buffer[index_buffer+2] == 'F'){
//				cmd_flag = 0;
//				request_check = 0;
//			}
//			else if (buffer[index_buffer] == '!' && isDig(buffer[index_buffer+1]) && isDig(buffer[index_buffer+2])){
//				unsigned int temp_time = ((buffer[index_buffer+1] - '0')*10 + (buffer[index_buffer+2] - '0'));
//
//				timeChange = temp_time*10;
//				HAL_UART_Transmit(&huart2,(void *)str, sprintf(str, "!%d:ERROR#\r\n", timeChange), sizeof(str));
//				check_dispatch = 0;
//				request_check = 0;
//			}

//			else{
//
//				request_check = 1;
//			}
//			request_flag = 1;
//			rst_buffer();
		else if (buffer[idx_buffer] != '!' && buffer[idx_buffer] != '@'){
			cmd_data[cmd_data_index] =buffer[idx_buffer];
			cmd_data_index++;
			idx_buffer++;
		}
		else if(buffer_byte == '@'){
			if(cmd_data[0] == '2' && cmd_data[1] == 'C'){
				cmd_flag = 1;
				request_check = 0;
			}
			else if(cmd_data[0] == '2' && cmd_data[1] == 'F'){
				cmd_flag = 0;
				request_check = 0;
			}
			else if(isDig(cmd_data[0]) && isDig(cmd_data[1])) {
				unsigned int temp_time = (cmd_data[0] - '0')*10 + (cmd_data[0] - '0');
				timeChange = temp_time*10;
				HAL_UART_Transmit(&huart2,(void *)str, sprintf(str, "!%d:ERROR#\r\n", timeChange), sizeof(str));
				check_dispatch = 0;
				request_check = 0;
			}
			else{
				request_check = 1;
			}
			rst_buffer();

		}
		request_flag = 1;
		buffer_flag = 0;
	}
}

void cmd_check_request(){
	char str[50];
	if(request_flag == 1){
		request_flag = 0;
		if(request_check == 1){
			HAL_UART_Transmit(&huart2,(void *)str, sprintf(str, "!Request:ERROR#\r\n"), sizeof(str));
		}
		else{
			HAL_UART_Transmit(&huart2,(void *)str, sprintf(str, "!Request:OK#\r\n"), sizeof(str));
		}
	}
}

uint32_t CheckSum(char* arr, uint32_t len_str){
	uint32_t result = 0;
	for(int i=0; i< len_str; i++){
		result += arr[i];
	}
	return result;
}

